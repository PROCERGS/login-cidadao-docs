{
    "docs": [
        {
            "location": "/", 
            "text": "O Login Cidad\u00e3o tem o objetivo de promover a integra\u00e7\u00e3o, o cadastro e a autentica\u00e7\u00e3o do cidad\u00e3o junto \u00e0s ferramentas e os Servi\u00e7os Digitais do Governo, facilitando o relacionamento da pessoa f\u00edsica com o Governo do Estado e abrindo caminho para a ado\u00e7\u00e3o de uma Identidade Digital para as cidad\u00e3s e os cidad\u00e3os ga\u00fachos.\n\n\nA iniciativa promove a desburocratiza\u00e7\u00e3o e a integra\u00e7\u00e3o de sistemas, diminui a possibilidade de fraudes e padroniza o acesso \u00e0s bases de dados do Estado, ao passo que permite o registro automatizado e o acompanhamento sistem\u00e1tico da intera\u00e7\u00e3o dos cidad\u00e3os com os servi\u00e7os digitais geridos pela Administra\u00e7\u00e3o Estadual.\n\n\nVeja mais informa\u00e7\u00f5es em \nhttp://logincidadao.org.br\n.", 
            "title": "Sobre a plataforma"
        }, 
        {
            "location": "/como-instalar/", 
            "text": "Instala\u00e7\u00e3o \nLogin Cidad\u00e3o\n\n\nEsta documenta\u00e7\u00e3o foi baseada em um servidor GNU/Linux Debian 8.1. Se sua inten\u00e7\u00e3o \u00e9 instalar em sistema de base diferente algumas adapta\u00e7\u00f5es podem ser necess\u00e1rias. \n\n\nServer User\n\n\nPara instalar a aplica\u00e7\u00e3o \u00e9 necess\u00e1rio ter acesso a dois usu\u00e1rios: um usu\u00e1rio padr\u00e3o e um usu\u00e1rio com poderes de sudo. Voc\u00ea pode usar o usu\u00e1rio padr\u00e3o de costume de seu servidor e o root, mas recomendamos criar um usu\u00e1rio s\u00f3 para o gerenciamente do Login Cidad\u00e3o, facilitando assim o controle e o registro de logs do sistema. \n\n\n    // logado como root, crie o novo user:\n    # useradd --create-home --groups sudo -s /bin/bash login-cidadao\n    // Insira uma senha para o novo user\n    # passwd login-cidadao\n\n\n\n\nInstalando Depend\u00eancias\n\n\nPara que o Login Cidad\u00e3o funcione corretamente ser\u00e1 necess\u00e1rio que estejam instaladas as seguintes depend\u00eancias: \n\n PHP \n=5.3.3\n\n composer\n\n node.js\n\n PHP Extensions\n  * php5-curl\n  * php5-intl\n  * php5-mysql ou php5-pgsql ou integra\u00e7\u00e3o de base de dados de sua prefer\u00eancia\n  * php5-memcache (Tamb\u00e9m \u00e9 poss\u00edvel usar php5-memcached mas ser\u00e1 necess\u00e1rio mudar algumas classes de Memcache para Memcached)\n\n\n    // Instalando pacotes do php. \n    // Observe que aqui vamos optar por usar o postgres, mas \u00e9 poss\u00edvel usar mysql sem problemas\n    $ sudo apt-get install php5 php5-curl php5-intl php5-pgsql php5-memcache\n\n    // Instalando Composer\n    $ sudo apt-get install curl\n    $ sudo curl -sS https://getcomposer.org/installer | php\n    $ sudo mv composer.phar /usr/local/bin/composer\n\n    // Instalando nodejs\n    $ sudo curl -sL https://deb.nodesource.com/setup_5.x | bash -\n    $ sudo apt-get install --yes nodejs\n\n\n\n\nObtendo o Login Cidad\u00e3o e instalando\n\n\nAp\u00f3s instalar as depend\u00eancias, clone o reposit\u00f3rio da aplica\u00e7\u00e3o. Recomendamos fazer isso com o usu\u00e1rio criado e dentro de uma estrutura de diret\u00f3rios padr\u00e3o /var/www/login-cidadao, mas \u00e9 poss\u00edvel adaptar para qualquer contexto. \n\n\n    $ `git clone https://github.com/PROCERGS/login-cidadao.git`\n\n\n\n\n\n\n\n\nEntre no diret\u00f3rio criado\n\n\ncd login-cidadao\n\n\n\n\n\n\nMude para o branch \nsymfony2.7\n (este branch \u00e9 experimental atualmente, 07.07.2015, mas funciona)\n\n\ngit checkout symfony2.7\n\n\n\n\n\n\nCrie um arquivo \napp/config/parameters.yml\n a partir de \napp/config/parameters.yml.dist\n e edite com suas modifica\u00e7\u00f5es\n\n\n\n\n\n\nVerifique se todas os requisitos est\u00e3o sendo cumpridos antes de iniciar a instala\u00e7\u00e3o\n    \nphp app/check.php\n\n\n\n\n\n\nSe a verifica\u00e7\u00e3o for bem sucedida inicie a instala\u00e7\u00e3o\n    \n./install.sh\n\n\n\n\n\n\nArquivo de configura\u00e7\u00e3o \nparameters.yml\n\n\nlocale:\n -\n substitua pelo seu locale (ex. pt_BR)\n\n\nsecret:\n -\n substitua por uma longa cadeia de letras, n\u00fameros e s\u00edmbolos\n\n\nsite_domain:\n -\n substitua pelo seu dom\u00ednio/subdom\u00ednio\n\n\nrecaptcha_public_key:\n e \nrecaptcha_private_key:\n -\n gere essas chaves em https://www.google.com/recaptcha/\n\n\nregistration.cpf.empty_time:\n e \nregistration.email.unconfirmed_time:\n -\n define quanto tempo deve ser dado para que o usu\u00e1rio confirme o CPF e o email, respectivamente\n\n\nbrute_force_threshold:\n -\n quantas tentativas devem ser toleradas antes de considerar um ataque de for\u00e7a bruta\n\n\nApache\n\n\nExemplo de arquivo de configura\u00e7\u00e3o do Apache.\n\n\nVirtualHost *:80\n\n    ServerName sub.dominio.com.br\n    ServerAdmin usuario@email\n\n    DocumentRoot /var/www/login-cidadao/web\n\n    \nDirectory / \n\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n        Order allow,deny\n        allow from all\n    \n/Directory\n\n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n/VirtualHost\n\n\n\n\n\n\n\n\n\nEm \nDocumentRoot\n \u00e9 preciso apontar para o diret\u00f3rio \nweb\n, neste exemplo o caminho completo \u00e9 \n/var/www/login-cidadao/web\n.\n\n\n\n\n\n\nServerName deve ser preenchido com o dom\u00ednio (ex. dominio.com.br) ou subdom\u00ednio completo (ex. sub.dominio.com.br)\n\n\n\n\n\n\nPrimeiros passos p\u00f3s-instala\u00e7\u00e3o\n\n\n\n\n\n\nAdicione os seguintes aliases ao seu arquivo \n.bashrc\n\n\nalias prod='php app/console --env=prod'\n\n\nalias dev='php app/console --env=dev'\n\n\n\n\n\n\nAtualize o perfil do terminal\n\n\nsource ~/.bashrc\n\n\n\n\nObs.: Etapa desnecess\u00e1ria para logins futuros j\u00e1 que o .bashrc ser\u00e1 executado no processo de login.\n\n\n\n\n\n\n\n\nProcesse e ative todos os assets\n\n\nprod assets:install\n\n\nprod assetic:dump\n\n\n\n\n\n\nDar poderes de super administrador para o primeiro usu\u00e1rio\n\n\nprod fos:user:promote \nusername\n ROLE_SUPER_ADMIN\n\n\n\n\n\n\nObs. 1: Substitua \"\n\" pelo nome do usu\u00e1rio como mostrado na \u00e1rea superior direita da p\u00e1gina, geralmente o que precede o '@' do email usado na hora da cria\u00e7\u00e3o do usu\u00e1rio.\n\n\n\n\n\n\nObs. 2: Para confirmar visualmente o novo papel de super administrador fa\u00e7a um logout e depois um login. Junto ao nome dever\u00e1 haver um campo 'impersonate', ver esse campo \u00e9 a confirma\u00e7\u00e3o.\n\n\n\n\n\n\n\n\n\n\nNavegando em modo de desenvolvimento\n\n\nAdicione \n/app_dev.php\n na URL.\n\n\nAlguns comandos pr\u00e1ticos\n\n\nAssume-se que as estapas 1 e 2 dos \nPrimeiros passos p\u00f3s-instala\u00e7\u00e3o\n tenham sido cumpridos para seguir estes comandos.\n\n\n\n\nLimpar o cache\n\n\nprod cache:clear\n\n\ndev cache:clear\n\n    se n\u00e3o funcionar, em \u00faltima inst\u00e2ncia use\n\n\nrm -rf app/cache/*\n\n\nCriar ou atualizar os assets\n\n\nprod assets:install\n\n\nprod assetic:dump\n\n\nCriar ou atualizar os vendors (\u00fatil, por exemplo, quando se muda de branch)\n\n\ncomposer install\n\n\n\n\nAdicionando servi\u00e7os\n\n\nem breve\n\n\nIntegrando com o Mapas Culturais\n\n\n'auth.provider' =\n 'OpauthLoginCidadao',\n'auth.config' =\n array(\n    'client_id' =\n 'minha_chave_publica',\n    'client_secret' =\n 'minha_chave_privada',\n    'auth_endpoint' =\n 'https://sub.dominio/oauth/v2/auth',\n    'token_endpoint' =\n 'https://sub.dominio/oauth/v2/token',\n    'user_info_endpoint' =\n 'https://sub.dominio/api/v1/person.json'\n),\n\n\n\n\n\n\nObs. 1: As chaves p\u00fablica e privada s\u00e3o geradas na adi\u00e7\u00e3o do servi\u00e7o.  \n\n\nObs. 2: substituir o dom\u00ednio/subdom\u00ednio das tr\u00eas \u00faltimas linhas.", 
            "title": "Instala\u00e7\u00e3o"
        }, 
        {
            "location": "/como-instalar/#instalacao-login-cidadao", 
            "text": "Esta documenta\u00e7\u00e3o foi baseada em um servidor GNU/Linux Debian 8.1. Se sua inten\u00e7\u00e3o \u00e9 instalar em sistema de base diferente algumas adapta\u00e7\u00f5es podem ser necess\u00e1rias.", 
            "title": "Instala\u00e7\u00e3o Login Cidad\u00e3o"
        }, 
        {
            "location": "/como-instalar/#server-user", 
            "text": "Para instalar a aplica\u00e7\u00e3o \u00e9 necess\u00e1rio ter acesso a dois usu\u00e1rios: um usu\u00e1rio padr\u00e3o e um usu\u00e1rio com poderes de sudo. Voc\u00ea pode usar o usu\u00e1rio padr\u00e3o de costume de seu servidor e o root, mas recomendamos criar um usu\u00e1rio s\u00f3 para o gerenciamente do Login Cidad\u00e3o, facilitando assim o controle e o registro de logs do sistema.       // logado como root, crie o novo user:\n    # useradd --create-home --groups sudo -s /bin/bash login-cidadao\n    // Insira uma senha para o novo user\n    # passwd login-cidadao", 
            "title": "Server User"
        }, 
        {
            "location": "/como-instalar/#instalando-dependencias", 
            "text": "Para que o Login Cidad\u00e3o funcione corretamente ser\u00e1 necess\u00e1rio que estejam instaladas as seguintes depend\u00eancias:   PHP  =5.3.3  composer  node.js  PHP Extensions\n  * php5-curl\n  * php5-intl\n  * php5-mysql ou php5-pgsql ou integra\u00e7\u00e3o de base de dados de sua prefer\u00eancia\n  * php5-memcache (Tamb\u00e9m \u00e9 poss\u00edvel usar php5-memcached mas ser\u00e1 necess\u00e1rio mudar algumas classes de Memcache para Memcached)      // Instalando pacotes do php. \n    // Observe que aqui vamos optar por usar o postgres, mas \u00e9 poss\u00edvel usar mysql sem problemas\n    $ sudo apt-get install php5 php5-curl php5-intl php5-pgsql php5-memcache\n\n    // Instalando Composer\n    $ sudo apt-get install curl\n    $ sudo curl -sS https://getcomposer.org/installer | php\n    $ sudo mv composer.phar /usr/local/bin/composer\n\n    // Instalando nodejs\n    $ sudo curl -sL https://deb.nodesource.com/setup_5.x | bash -\n    $ sudo apt-get install --yes nodejs  Obtendo o Login Cidad\u00e3o e instalando  Ap\u00f3s instalar as depend\u00eancias, clone o reposit\u00f3rio da aplica\u00e7\u00e3o. Recomendamos fazer isso com o usu\u00e1rio criado e dentro de uma estrutura de diret\u00f3rios padr\u00e3o /var/www/login-cidadao, mas \u00e9 poss\u00edvel adaptar para qualquer contexto.       $ `git clone https://github.com/PROCERGS/login-cidadao.git`    Entre no diret\u00f3rio criado  cd login-cidadao    Mude para o branch  symfony2.7  (este branch \u00e9 experimental atualmente, 07.07.2015, mas funciona)  git checkout symfony2.7    Crie um arquivo  app/config/parameters.yml  a partir de  app/config/parameters.yml.dist  e edite com suas modifica\u00e7\u00f5es    Verifique se todas os requisitos est\u00e3o sendo cumpridos antes de iniciar a instala\u00e7\u00e3o\n     php app/check.php    Se a verifica\u00e7\u00e3o for bem sucedida inicie a instala\u00e7\u00e3o\n     ./install.sh    Arquivo de configura\u00e7\u00e3o  parameters.yml  locale:  -  substitua pelo seu locale (ex. pt_BR)  secret:  -  substitua por uma longa cadeia de letras, n\u00fameros e s\u00edmbolos  site_domain:  -  substitua pelo seu dom\u00ednio/subdom\u00ednio  recaptcha_public_key:  e  recaptcha_private_key:  -  gere essas chaves em https://www.google.com/recaptcha/  registration.cpf.empty_time:  e  registration.email.unconfirmed_time:  -  define quanto tempo deve ser dado para que o usu\u00e1rio confirme o CPF e o email, respectivamente  brute_force_threshold:  -  quantas tentativas devem ser toleradas antes de considerar um ataque de for\u00e7a bruta  Apache  Exemplo de arquivo de configura\u00e7\u00e3o do Apache.  VirtualHost *:80 \n    ServerName sub.dominio.com.br\n    ServerAdmin usuario@email\n\n    DocumentRoot /var/www/login-cidadao/web\n\n     Directory /  \n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n        Order allow,deny\n        allow from all\n     /Directory \n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined /VirtualHost     Em  DocumentRoot  \u00e9 preciso apontar para o diret\u00f3rio  web , neste exemplo o caminho completo \u00e9  /var/www/login-cidadao/web .    ServerName deve ser preenchido com o dom\u00ednio (ex. dominio.com.br) ou subdom\u00ednio completo (ex. sub.dominio.com.br)    Primeiros passos p\u00f3s-instala\u00e7\u00e3o    Adicione os seguintes aliases ao seu arquivo  .bashrc  alias prod='php app/console --env=prod'  alias dev='php app/console --env=dev'    Atualize o perfil do terminal  source ~/.bashrc   Obs.: Etapa desnecess\u00e1ria para logins futuros j\u00e1 que o .bashrc ser\u00e1 executado no processo de login.     Processe e ative todos os assets  prod assets:install  prod assetic:dump    Dar poderes de super administrador para o primeiro usu\u00e1rio  prod fos:user:promote  username  ROLE_SUPER_ADMIN    Obs. 1: Substitua \" \" pelo nome do usu\u00e1rio como mostrado na \u00e1rea superior direita da p\u00e1gina, geralmente o que precede o '@' do email usado na hora da cria\u00e7\u00e3o do usu\u00e1rio.    Obs. 2: Para confirmar visualmente o novo papel de super administrador fa\u00e7a um logout e depois um login. Junto ao nome dever\u00e1 haver um campo 'impersonate', ver esse campo \u00e9 a confirma\u00e7\u00e3o.", 
            "title": "Instalando Depend\u00eancias"
        }, 
        {
            "location": "/como-instalar/#navegando-em-modo-de-desenvolvimento", 
            "text": "Adicione  /app_dev.php  na URL.", 
            "title": "Navegando em modo de desenvolvimento"
        }, 
        {
            "location": "/como-instalar/#alguns-comandos-praticos", 
            "text": "Assume-se que as estapas 1 e 2 dos  Primeiros passos p\u00f3s-instala\u00e7\u00e3o  tenham sido cumpridos para seguir estes comandos.   Limpar o cache  prod cache:clear  dev cache:clear \n    se n\u00e3o funcionar, em \u00faltima inst\u00e2ncia use  rm -rf app/cache/*  Criar ou atualizar os assets  prod assets:install  prod assetic:dump  Criar ou atualizar os vendors (\u00fatil, por exemplo, quando se muda de branch)  composer install", 
            "title": "Alguns comandos pr\u00e1ticos"
        }, 
        {
            "location": "/como-instalar/#adicionando-servicos", 
            "text": "em breve", 
            "title": "Adicionando servi\u00e7os"
        }, 
        {
            "location": "/como-instalar/#integrando-com-o-mapas-culturais", 
            "text": "'auth.provider' =  'OpauthLoginCidadao',\n'auth.config' =  array(\n    'client_id' =  'minha_chave_publica',\n    'client_secret' =  'minha_chave_privada',\n    'auth_endpoint' =  'https://sub.dominio/oauth/v2/auth',\n    'token_endpoint' =  'https://sub.dominio/oauth/v2/token',\n    'user_info_endpoint' =  'https://sub.dominio/api/v1/person.json'\n),   Obs. 1: As chaves p\u00fablica e privada s\u00e3o geradas na adi\u00e7\u00e3o do servi\u00e7o.    Obs. 2: substituir o dom\u00ednio/subdom\u00ednio das tr\u00eas \u00faltimas linhas.", 
            "title": "Integrando com o Mapas Culturais"
        }
    ]
}